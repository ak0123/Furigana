{"version":3,"file":"background.js","mappings":"yDAGA,IAAIA,GAAS,EACwB,oBAAXC,QACyBC,EAAOC,O,WCc1D,IAAIC,EAAmBC,QAAQ,sBAC3BC,EAAoBD,QAAQ,oCAG5BE,EAAW,CACXC,QAAS,SAAUC,GACf,OAAO,IAAIL,EAAiBK,EAChC,EACAC,kBAAmB,WACf,OAAO,IAAIJ,CACf,GAGJJ,OAAOC,QAAUI,C,GC/BbI,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaX,QAGrB,IAAID,EAASS,EAAyBE,GAAY,CACjDG,GAAIH,EACJI,QAAQ,EACRd,QAAS,CAAC,GAUX,OANAe,EAAoBL,GAAUX,EAAQA,EAAOC,QAASS,GAGtDV,EAAOe,QAAS,EAGTf,EAAOC,OACf,CCzBAS,EAAoBO,IAAOjB,KAC1BA,EAASkB,OAAOC,OAAOnB,IACXoB,WAAUpB,EAAOoB,SAAW,IACxCF,OAAOG,eAAerB,EAAQ,UAAW,CACxCsB,YAAY,EACZC,IAAK,KACJ,MAAM,IAAIC,MAAM,0FAA4FxB,EAAOc,GAAG,IAGjHd,GCTwB,IAASyB,WAAW,GAAK,IAASA,WAAW,GAC7C,IAASA,WAAW,GAAK,IAASA,WAAW,G","sources":["webpack://furigana/./node_modules/kuroshiro-analyzer-kuromoji/src/index.js","webpack://furigana/./kuromoji/index.js","webpack://furigana/webpack/bootstrap","webpack://furigana/webpack/runtime/harmony module decorator","webpack://furigana/./node_modules/kuroshiro/src/util.js"],"sourcesContent":["import kuromoji from \"kuromoji\";\n\n// Check where we are\nlet isNode = false;\nconst isBrowser = (typeof window !== \"undefined\");\nif (!isBrowser && typeof module !== \"undefined\" && module.exports) {\n    isNode = true;\n}\n\n/**\n * Kuromoji based morphological analyzer for kuroshiro\n */\nclass Analyzer {\n    /**\n     * Constructor\n     * @param {Object} [options] JSON object which have key-value pairs settings\n     * @param {string} [options.dictPath] Path of the dictionary files\n     */\n    constructor({ dictPath } = {}) {\n        this._analyzer = null;\n\n        if (!dictPath) {\n            if (isNode) this._dictPath = require.resolve(\"kuromoji\").replace(/src(?!.*src).*/, \"dict/\");\n            else this._dictPath = \"node_modules/kuromoji/dict/\";\n        }\n        else {\n            this._dictPath = dictPath;\n        }\n    }\n\n    /**\n     * Initialize the analyzer\n     * @returns {Promise} Promise object represents the result of initialization\n     */\n    init() {\n        return new Promise((resolve, reject) => {\n            const self = this;\n            if (this._analyzer == null) {\n                kuromoji.builder({ dicPath: this._dictPath }).build((err, newAnalyzer) => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    self._analyzer = newAnalyzer;\n                    resolve();\n                });\n            }\n            else {\n                reject(new Error(\"This analyzer has already been initialized.\"));\n            }\n        });\n    }\n\n    /**\n     * Parse the given string\n     * @param {string} str input string\n     * @returns {Promise} Promise object represents the result of parsing\n     * @example The result of parsing\n     * [{\n     *     \"surface_form\": \"黒白\",    // 表層形\n     *     \"pos\": \"名詞\",               // 品詞 (part of speech)\n     *     \"pos_detail_1\": \"一般\",      // 品詞細分類1\n     *     \"pos_detail_2\": \"*\",        // 品詞細分類2\n     *     \"pos_detail_3\": \"*\",        // 品詞細分類3\n     *     \"conjugated_type\": \"*\",     // 活用型\n     *     \"conjugated_form\": \"*\",     // 活用形\n     *     \"basic_form\": \"黒白\",      // 基本形\n     *     \"reading\": \"クロシロ\",       // 読み\n     *     \"pronunciation\": \"クロシロ\",  // 発音\n     *     \"verbose\": {                 // Other properties\n     *         \"word_id\": 413560,\n     *         \"word_type\": \"KNOWN\",\n     *         \"word_position\": 1\n     *     }\n     * }]\n     */\n    parse(str = \"\") {\n        return new Promise((resolve, reject) => {\n            if (str.trim() === \"\") return resolve([]);\n            const result = this._analyzer.tokenize(str);\n            for (let i = 0; i < result.length; i++) {\n                result[i].verbose = {};\n                result[i].verbose.word_id = result[i].word_id;\n                result[i].verbose.word_type = result[i].word_type;\n                result[i].verbose.word_position = result[i].word_position;\n                delete result[i].word_id;\n                delete result[i].word_type;\n                delete result[i].word_position;\n            }\n            resolve(result);\n        });\n    }\n}\n\nexport default Analyzer;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar TokenizerBuilder = require(\"./TokenizerBuilder\");\nvar DictionaryBuilder = require(\"./dict/builder/DictionaryBuilder\");\n\n// Public methods\nvar kuromoji = {\n    builder: function (option) {\n        return new TokenizerBuilder(option);\n    },\n    dictionaryBuilder: function () {\n        return new DictionaryBuilder();\n    }\n};\n\nmodule.exports = kuromoji;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","const KATAKANA_HIRAGANA_SHIFT = \"\\u3041\".charCodeAt(0) - \"\\u30a1\".charCodeAt(0);\nconst HIRAGANA_KATAKANA_SHIFT = \"\\u30a1\".charCodeAt(0) - \"\\u3041\".charCodeAt(0);\nconst ROMANIZATION_SYSTEM = {\n    NIPPON: \"nippon\",\n    PASSPORT: \"passport\",\n    HEPBURN: \"hepburn\"\n};\n\n/**\n * Check if given char is a hiragana\n *\n * @param {string} ch Given char\n * @return {boolean} if given char is a hiragana\n */\nconst isHiragana = function (ch) {\n    ch = ch[0];\n    return ch >= \"\\u3040\" && ch <= \"\\u309f\";\n};\n\n/**\n * Check if given char is a katakana\n *\n * @param {string} ch Given char\n * @return {boolean} if given char is a katakana\n */\nconst isKatakana = function (ch) {\n    ch = ch[0];\n    return ch >= \"\\u30a0\" && ch <= \"\\u30ff\";\n};\n\n/**\n * Check if given char is a kana\n *\n * @param {string} ch Given char\n * @return {boolean} if given char is a kana\n */\nconst isKana = function (ch) {\n    return isHiragana(ch) || isKatakana(ch);\n};\n\n/**\n * Check if given char is a kanji\n *\n * @param {string} ch Given char\n * @return {boolean} if given char is a kanji\n */\nconst isKanji = function (ch) {\n    ch = ch[0];\n    return (ch >= \"\\u4e00\" && ch <= \"\\u9fcf\")\n        || (ch >= \"\\uf900\" && ch <= \"\\ufaff\")\n        || (ch >= \"\\u3400\" && ch <= \"\\u4dbf\");\n};\n\n/**\n * Check if given char is a Japanese\n *\n * @param {string} ch Given char\n * @return {boolean} if given char is a Japanese\n */\nconst isJapanese = function (ch) {\n    return isKana(ch) || isKanji(ch);\n};\n\n/**\n * Check if given string has hiragana\n *\n * @param {string} str Given string\n * @return {boolean} if given string has hiragana\n */\nconst hasHiragana = function (str) {\n    for (let i = 0; i < str.length; i++) {\n        if (isHiragana(str[i])) return true;\n    }\n    return false;\n};\n\n/**\n * Check if given string has katakana\n *\n * @param {string} str Given string\n * @return {boolean} if given string has katakana\n */\nconst hasKatakana = function (str) {\n    for (let i = 0; i < str.length; i++) {\n        if (isKatakana(str[i])) return true;\n    }\n    return false;\n};\n\n/**\n * Check if given string has kana\n *\n * @param {string} str Given string\n * @return {boolean} if given string has kana\n */\nconst hasKana = function (str) {\n    for (let i = 0; i < str.length; i++) {\n        if (isKana(str[i])) return true;\n    }\n    return false;\n};\n\n/**\n * Check if given string has kanji\n *\n * @param {string} str Given string\n * @return {boolean} if given string has kanji\n */\nconst hasKanji = function (str) {\n    for (let i = 0; i < str.length; i++) {\n        if (isKanji(str[i])) return true;\n    }\n    return false;\n};\n\n/**\n * Check if given string has Japanese\n *\n * @param {string} str Given string\n * @return {boolean} if given string has Japanese\n */\nconst hasJapanese = function (str) {\n    for (let i = 0; i < str.length; i++) {\n        if (isJapanese(str[i])) return true;\n    }\n    return false;\n};\n\n/**\n * Convert kana to hiragana\n *\n * @param {string} str Given string\n * @return {string} Hiragana string\n */\nconst toRawHiragana = function (str) {\n    return [...str].map((ch) => {\n        if (ch > \"\\u30a0\" && ch < \"\\u30f7\") {\n            return String.fromCharCode(ch.charCodeAt(0) + KATAKANA_HIRAGANA_SHIFT);\n        }\n        return ch;\n    }).join(\"\");\n};\n\n/**\n * Convert kana to katakana\n *\n * @param {string} str Given string\n * @return {string} Katakana string\n */\nconst toRawKatakana = function (str) {\n    return [...str].map((ch) => {\n        if (ch > \"\\u3040\" && ch < \"\\u3097\") {\n            return String.fromCharCode(ch.charCodeAt(0) + HIRAGANA_KATAKANA_SHIFT);\n        }\n        return ch;\n    }).join(\"\");\n};\n\n/**\n * Convert kana to romaji\n *\n * @param {string} str Given string\n * @param {string} system To which romanization system the given string is converted\n * @return {string} Romaji string\n */\nconst toRawRomaji = function (str, system) {\n    system = system || ROMANIZATION_SYSTEM.HEPBURN;\n\n    const romajiSystem = {\n        nippon: {\n            // 数字と記号\n            \"１\": \"1\",\n            \"２\": \"2\",\n            \"３\": \"3\",\n            \"４\": \"4\",\n            \"５\": \"5\",\n            \"６\": \"6\",\n            \"７\": \"7\",\n            \"８\": \"8\",\n            \"９\": \"9\",\n            \"０\": \"0\",\n            \"！\": \"!\",\n            \"“\": \"\\\"\",\n            \"”\": \"\\\"\",\n            \"＃\": \"#\",\n            \"＄\": \"$\",\n            \"％\": \"%\",\n            \"＆\": \"&\",\n            \"’\": \"'\",\n            \"（\": \"(\",\n            \"）\": \")\",\n            \"＝\": \"=\",\n            \"～\": \"~\",\n            \"｜\": \"|\",\n            \"＠\": \"@\",\n            \"‘\": \"`\",\n            \"＋\": \"+\",\n            \"＊\": \"*\",\n            \"；\": \";\",\n            \"：\": \":\",\n            \"＜\": \"<\",\n            \"＞\": \">\",\n            \"、\": \",\",\n            \"。\": \".\",\n            \"／\": \"/\",\n            \"？\": \"?\",\n            \"＿\": \"_\",\n            \"・\": \"･\",\n            \"「\": \"\\\"\",\n            \"」\": \"\\\"\",\n            \"｛\": \"{\",\n            \"｝\": \"}\",\n            \"￥\": \"\\\\\",\n            \"＾\": \"^\",\n\n            // 直音-清音(ア～ノ)\n            あ: \"a\",\n            い: \"i\",\n            う: \"u\",\n            え: \"e\",\n            お: \"o\",\n            ア: \"a\",\n            イ: \"i\",\n            ウ: \"u\",\n            エ: \"e\",\n            オ: \"o\",\n\n            か: \"ka\",\n            き: \"ki\",\n            く: \"ku\",\n            け: \"ke\",\n            こ: \"ko\",\n            カ: \"ka\",\n            キ: \"ki\",\n            ク: \"ku\",\n            ケ: \"ke\",\n            コ: \"ko\",\n\n            さ: \"sa\",\n            し: \"si\",\n            す: \"su\",\n            せ: \"se\",\n            そ: \"so\",\n            サ: \"sa\",\n            シ: \"si\",\n            ス: \"su\",\n            セ: \"se\",\n            ソ: \"so\",\n\n            た: \"ta\",\n            ち: \"ti\",\n            つ: \"tu\",\n            て: \"te\",\n            と: \"to\",\n            タ: \"ta\",\n            チ: \"ti\",\n            ツ: \"tu\",\n            テ: \"te\",\n            ト: \"to\",\n\n            な: \"na\",\n            に: \"ni\",\n            ぬ: \"nu\",\n            ね: \"ne\",\n            の: \"no\",\n            ナ: \"na\",\n            ニ: \"ni\",\n            ヌ: \"nu\",\n            ネ: \"ne\",\n            ノ: \"no\",\n\n            // 直音-清音(ハ～ヲ)\n            は: \"ha\",\n            ひ: \"hi\",\n            ふ: \"hu\",\n            へ: \"he\",\n            ほ: \"ho\",\n            ハ: \"ha\",\n            ヒ: \"hi\",\n            フ: \"hu\",\n            ヘ: \"he\",\n            ホ: \"ho\",\n\n            ま: \"ma\",\n            み: \"mi\",\n            む: \"mu\",\n            め: \"me\",\n            も: \"mo\",\n            マ: \"ma\",\n            ミ: \"mi\",\n            ム: \"mu\",\n            メ: \"me\",\n            モ: \"mo\",\n\n            や: \"ya\",\n            ゆ: \"yu\",\n            よ: \"yo\",\n            ヤ: \"ya\",\n            ユ: \"yu\",\n            ヨ: \"yo\",\n\n            ら: \"ra\",\n            り: \"ri\",\n            る: \"ru\",\n            れ: \"re\",\n            ろ: \"ro\",\n            ラ: \"ra\",\n            リ: \"ri\",\n            ル: \"ru\",\n            レ: \"re\",\n            ロ: \"ro\",\n\n            わ: \"wa\",\n            ゐ: \"wi\",\n            ゑ: \"we\",\n            を: \"wo\",\n            ワ: \"wa\",\n            ヰ: \"wi\",\n            ヱ: \"we\",\n            ヲ: \"wo\",\n\n            // 直音-濁音(ガ～ボ)、半濁音(パ～ポ)\n            が: \"ga\",\n            ぎ: \"gi\",\n            ぐ: \"gu\",\n            げ: \"ge\",\n            ご: \"go\",\n            ガ: \"ga\",\n            ギ: \"gi\",\n            グ: \"gu\",\n            ゲ: \"ge\",\n            ゴ: \"go\",\n\n            ざ: \"za\",\n            じ: \"zi\",\n            ず: \"zu\",\n            ぜ: \"ze\",\n            ぞ: \"zo\",\n            ザ: \"za\",\n            ジ: \"zi\",\n            ズ: \"zu\",\n            ゼ: \"ze\",\n            ゾ: \"zo\",\n\n            だ: \"da\",\n            ぢ: \"di\",\n            づ: \"du\",\n            で: \"de\",\n            ど: \"do\",\n            ダ: \"da\",\n            ヂ: \"di\",\n            ヅ: \"du\",\n            デ: \"de\",\n            ド: \"do\",\n\n            ば: \"ba\",\n            び: \"bi\",\n            ぶ: \"bu\",\n            べ: \"be\",\n            ぼ: \"bo\",\n            バ: \"ba\",\n            ビ: \"bi\",\n            ブ: \"bu\",\n            ベ: \"be\",\n            ボ: \"bo\",\n\n            ぱ: \"pa\",\n            ぴ: \"pi\",\n            ぷ: \"pu\",\n            ぺ: \"pe\",\n            ぽ: \"po\",\n            パ: \"pa\",\n            ピ: \"pi\",\n            プ: \"pu\",\n            ペ: \"pe\",\n            ポ: \"po\",\n\n            // 拗音-清音(キャ～リョ)\n            きゃ: \"kya\",\n            きゅ: \"kyu\",\n            きょ: \"kyo\",\n            しゃ: \"sya\",\n            しゅ: \"syu\",\n            しょ: \"syo\",\n            ちゃ: \"tya\",\n            ちゅ: \"tyu\",\n            ちょ: \"tyo\",\n            にゃ: \"nya\",\n            にゅ: \"nyu\",\n            にょ: \"nyo\",\n            ひゃ: \"hya\",\n            ひゅ: \"hyu\",\n            ひょ: \"hyo\",\n            みゃ: \"mya\",\n            みゅ: \"myu\",\n            みょ: \"myo\",\n            りゃ: \"rya\",\n            りゅ: \"ryu\",\n            りょ: \"ryo\",\n            キャ: \"kya\",\n            キュ: \"kyu\",\n            キョ: \"kyo\",\n            シャ: \"sya\",\n            シュ: \"syu\",\n            ショ: \"syo\",\n            チャ: \"tya\",\n            チュ: \"tyu\",\n            チョ: \"tyo\",\n            ニャ: \"nya\",\n            ニュ: \"nyu\",\n            ニョ: \"nyo\",\n            ヒャ: \"hya\",\n            ヒュ: \"hyu\",\n            ヒョ: \"hyo\",\n            ミャ: \"mya\",\n            ミュ: \"myu\",\n            ミョ: \"myo\",\n            リャ: \"rya\",\n            リュ: \"ryu\",\n            リョ: \"ryo\",\n\n            // 拗音-濁音(ギャ～ビョ)、半濁音(ピャ～ピョ)、合拗音(クヮ、グヮ)\n            ぎゃ: \"gya\",\n            ぎゅ: \"gyu\",\n            ぎょ: \"gyo\",\n            じゃ: \"zya\",\n            じゅ: \"zyu\",\n            じょ: \"zyo\",\n            ぢゃ: \"dya\",\n            ぢゅ: \"dyu\",\n            ぢょ: \"dyo\",\n            びゃ: \"bya\",\n            びゅ: \"byu\",\n            びょ: \"byo\",\n            ぴゃ: \"pya\",\n            ぴゅ: \"pyu\",\n            ぴょ: \"pyo\",\n            くゎ: \"kwa\",\n            ぐゎ: \"gwa\",\n            ギャ: \"gya\",\n            ギュ: \"gyu\",\n            ギョ: \"gyo\",\n            ジャ: \"zya\",\n            ジュ: \"zyu\",\n            ジョ: \"zyo\",\n            ヂャ: \"dya\",\n            ヂュ: \"dyu\",\n            ヂョ: \"dyo\",\n            ビャ: \"bya\",\n            ビュ: \"byu\",\n            ビョ: \"byo\",\n            ピャ: \"pya\",\n            ピュ: \"pyu\",\n            ピョ: \"pyo\",\n            クヮ: \"kwa\",\n            グヮ: \"gwa\",\n\n            // 小書きの仮名、符号\n            ぁ: \"a\",\n            ぃ: \"i\",\n            ぅ: \"u\",\n            ぇ: \"e\",\n            ぉ: \"o\",\n            ゃ: \"ya\",\n            ゅ: \"yu\",\n            ょ: \"yo\",\n            ゎ: \"wa\",\n            ァ: \"a\",\n            ィ: \"i\",\n            ゥ: \"u\",\n            ェ: \"e\",\n            ォ: \"o\",\n            ャ: \"ya\",\n            ュ: \"yu\",\n            ョ: \"yo\",\n            ヮ: \"wa\",\n            ヵ: \"ka\",\n            ヶ: \"ke\",\n            ん: \"n\",\n            ン: \"n\",\n            // ー: \"\",\n            \"　\": \" \",\n\n            // 外来音(イェ～グォ)\n            いぇ: \"ye\",\n            // うぃ: \"\",\n            // うぇ: \"\",\n            // うぉ: \"\",\n            きぇ: \"kye\",\n            // くぁ: \"\",\n            くぃ: \"kwi\",\n            くぇ: \"kwe\",\n            くぉ: \"kwo\",\n            // ぐぁ: \"\",\n            ぐぃ: \"gwi\",\n            ぐぇ: \"gwe\",\n            ぐぉ: \"gwo\",\n            イェ: \"ye\",\n            // ウィ: \"\",\n            // ウェ: \"\",\n            // ウォ: \"\",\n            // ヴ: \"\",\n            // ヴァ: \"\",\n            // ヴィ: \"\",\n            // ヴェ: \"\",\n            // ヴォ: \"\",\n            // ヴュ: \"\",\n            // ヴョ: \"\",\n            キェ: \"kya\",\n            // クァ: \"\",\n            クィ: \"kwi\",\n            クェ: \"kwe\",\n            クォ: \"kwo\",\n            // グァ: \"\",\n            グィ: \"gwi\",\n            グェ: \"gwe\",\n            グォ: \"gwo\",\n\n            // 外来音(シェ～フョ)\n            しぇ: \"sye\",\n            じぇ: \"zye\",\n            すぃ: \"swi\",\n            ずぃ: \"zwi\",\n            ちぇ: \"tye\",\n            つぁ: \"twa\",\n            つぃ: \"twi\",\n            つぇ: \"twe\",\n            つぉ: \"two\",\n            // てぃ: \"ti\",\n            // てゅ: \"tyu\",\n            // でぃ: \"di\",\n            // でゅ: \"dyu\",\n            // とぅ: \"tu\",\n            // どぅ: \"du\",\n            にぇ: \"nye\",\n            ひぇ: \"hye\",\n            ふぁ: \"hwa\",\n            ふぃ: \"hwi\",\n            ふぇ: \"hwe\",\n            ふぉ: \"hwo\",\n            ふゅ: \"hwyu\",\n            ふょ: \"hwyo\",\n            シェ: \"sye\",\n            ジェ: \"zye\",\n            スィ: \"swi\",\n            ズィ: \"zwi\",\n            チェ: \"tye\",\n            ツァ: \"twa\",\n            ツィ: \"twi\",\n            ツェ: \"twe\",\n            ツォ: \"two\",\n            // ティ: \"ti\",\n            // テュ: \"tyu\",\n            // ディ: \"di\",\n            // デュ: \"dyu\",\n            // トゥ: \"tu\",\n            // ドゥ: \"du\",\n            ニェ: \"nye\",\n            ヒェ: \"hye\",\n            ファ: \"hwa\",\n            フィ: \"hwi\",\n            フェ: \"hwe\",\n            フォ: \"hwo\",\n            フュ: \"hwyu\",\n            フョ: \"hwyo\"\n        },\n        passport: {\n            // 数字と記号\n            \"１\": \"1\",\n            \"２\": \"2\",\n            \"３\": \"3\",\n            \"４\": \"4\",\n            \"５\": \"5\",\n            \"６\": \"6\",\n            \"７\": \"7\",\n            \"８\": \"8\",\n            \"９\": \"9\",\n            \"０\": \"0\",\n            \"！\": \"!\",\n            \"“\": \"\\\"\",\n            \"”\": \"\\\"\",\n            \"＃\": \"#\",\n            \"＄\": \"$\",\n            \"％\": \"%\",\n            \"＆\": \"&\",\n            \"’\": \"'\",\n            \"（\": \"(\",\n            \"）\": \")\",\n            \"＝\": \"=\",\n            \"～\": \"~\",\n            \"｜\": \"|\",\n            \"＠\": \"@\",\n            \"‘\": \"`\",\n            \"＋\": \"+\",\n            \"＊\": \"*\",\n            \"；\": \";\",\n            \"：\": \":\",\n            \"＜\": \"<\",\n            \"＞\": \">\",\n            \"、\": \",\",\n            \"。\": \".\",\n            \"／\": \"/\",\n            \"？\": \"?\",\n            \"＿\": \"_\",\n            \"・\": \"･\",\n            \"「\": \"\\\"\",\n            \"」\": \"\\\"\",\n            \"｛\": \"{\",\n            \"｝\": \"}\",\n            \"￥\": \"\\\\\",\n            \"＾\": \"^\",\n\n            // 直音-清音(ア～ノ)\n            あ: \"a\",\n            い: \"i\",\n            う: \"u\",\n            え: \"e\",\n            お: \"o\",\n            ア: \"a\",\n            イ: \"i\",\n            ウ: \"u\",\n            エ: \"e\",\n            オ: \"o\",\n\n            か: \"ka\",\n            き: \"ki\",\n            く: \"ku\",\n            け: \"ke\",\n            こ: \"ko\",\n            カ: \"ka\",\n            キ: \"ki\",\n            ク: \"ku\",\n            ケ: \"ke\",\n            コ: \"ko\",\n\n            さ: \"sa\",\n            し: \"shi\",\n            す: \"su\",\n            せ: \"se\",\n            そ: \"so\",\n            サ: \"sa\",\n            シ: \"shi\",\n            ス: \"su\",\n            セ: \"se\",\n            ソ: \"so\",\n\n            た: \"ta\",\n            ち: \"chi\",\n            つ: \"tsu\",\n            て: \"te\",\n            と: \"to\",\n            タ: \"ta\",\n            チ: \"chi\",\n            ツ: \"tsu\",\n            テ: \"te\",\n            ト: \"to\",\n\n            な: \"na\",\n            に: \"ni\",\n            ぬ: \"nu\",\n            ね: \"ne\",\n            の: \"no\",\n            ナ: \"na\",\n            ニ: \"ni\",\n            ヌ: \"nu\",\n            ネ: \"ne\",\n            ノ: \"no\",\n\n            // 直音-清音(ハ～ヲ)\n            は: \"ha\",\n            ひ: \"hi\",\n            ふ: \"fu\",\n            へ: \"he\",\n            ほ: \"ho\",\n            ハ: \"ha\",\n            ヒ: \"hi\",\n            フ: \"fu\",\n            ヘ: \"he\",\n            ホ: \"ho\",\n\n            ま: \"ma\",\n            み: \"mi\",\n            む: \"mu\",\n            め: \"me\",\n            も: \"mo\",\n            マ: \"ma\",\n            ミ: \"mi\",\n            ム: \"mu\",\n            メ: \"me\",\n            モ: \"mo\",\n\n            や: \"ya\",\n            ゆ: \"yu\",\n            よ: \"yo\",\n            ヤ: \"ya\",\n            ユ: \"yu\",\n            ヨ: \"yo\",\n\n            ら: \"ra\",\n            り: \"ri\",\n            る: \"ru\",\n            れ: \"re\",\n            ろ: \"ro\",\n            ラ: \"ra\",\n            リ: \"ri\",\n            ル: \"ru\",\n            レ: \"re\",\n            ロ: \"ro\",\n\n            わ: \"wa\",\n            ゐ: \"i\",\n            ゑ: \"e\",\n            を: \"o\",\n            ワ: \"wa\",\n            ヰ: \"i\",\n            ヱ: \"e\",\n            ヲ: \"o\",\n\n            // 直音-濁音(ガ～ボ)、半濁音(パ～ポ)\n            が: \"ga\",\n            ぎ: \"gi\",\n            ぐ: \"gu\",\n            げ: \"ge\",\n            ご: \"go\",\n            ガ: \"ga\",\n            ギ: \"gi\",\n            グ: \"gu\",\n            ゲ: \"ge\",\n            ゴ: \"go\",\n\n            ざ: \"za\",\n            じ: \"ji\",\n            ず: \"zu\",\n            ぜ: \"ze\",\n            ぞ: \"zo\",\n            ザ: \"za\",\n            ジ: \"ji\",\n            ズ: \"zu\",\n            ゼ: \"ze\",\n            ゾ: \"zo\",\n\n            だ: \"da\",\n            ぢ: \"ji\",\n            づ: \"zu\",\n            で: \"de\",\n            ど: \"do\",\n            ダ: \"da\",\n            ヂ: \"ji\",\n            ヅ: \"zu\",\n            デ: \"de\",\n            ド: \"do\",\n\n            ば: \"ba\",\n            び: \"bi\",\n            ぶ: \"bu\",\n            べ: \"be\",\n            ぼ: \"bo\",\n            バ: \"ba\",\n            ビ: \"bi\",\n            ブ: \"bu\",\n            ベ: \"be\",\n            ボ: \"bo\",\n\n            ぱ: \"pa\",\n            ぴ: \"pi\",\n            ぷ: \"pu\",\n            ぺ: \"pe\",\n            ぽ: \"po\",\n            パ: \"pa\",\n            ピ: \"pi\",\n            プ: \"pu\",\n            ペ: \"pe\",\n            ポ: \"po\",\n\n            // 拗音-清音(キャ～リョ)\n            きゃ: \"kya\",\n            きゅ: \"kyu\",\n            きょ: \"kyo\",\n            しゃ: \"sha\",\n            しゅ: \"shu\",\n            しょ: \"sho\",\n            ちゃ: \"cha\",\n            ちゅ: \"chu\",\n            ちょ: \"cho\",\n            にゃ: \"nya\",\n            にゅ: \"nyu\",\n            にょ: \"nyo\",\n            ひゃ: \"hya\",\n            ひゅ: \"hyu\",\n            ひょ: \"hyo\",\n            みゃ: \"mya\",\n            みゅ: \"myu\",\n            みょ: \"myo\",\n            りゃ: \"rya\",\n            りゅ: \"ryu\",\n            りょ: \"ryo\",\n            キャ: \"kya\",\n            キュ: \"kyu\",\n            キョ: \"kyo\",\n            シャ: \"sha\",\n            シュ: \"shu\",\n            ショ: \"sho\",\n            チャ: \"cha\",\n            チュ: \"chu\",\n            チョ: \"cho\",\n            ニャ: \"nya\",\n            ニュ: \"nyu\",\n            ニョ: \"nyo\",\n            ヒャ: \"hya\",\n            ヒュ: \"hyu\",\n            ヒョ: \"hyo\",\n            ミャ: \"mya\",\n            ミュ: \"myu\",\n            ミョ: \"myo\",\n            リャ: \"rya\",\n            リュ: \"ryu\",\n            リョ: \"ryo\",\n\n            // 拗音-濁音(ギャ～ビョ)、半濁音(ピャ～ピョ)、合拗音(クヮ、グヮ)\n            ぎゃ: \"gya\",\n            ぎゅ: \"gyu\",\n            ぎょ: \"gyo\",\n            じゃ: \"ja\",\n            じゅ: \"ju\",\n            じょ: \"jo\",\n            ぢゃ: \"ja\",\n            ぢゅ: \"ju\",\n            ぢょ: \"jo\",\n            びゃ: \"bya\",\n            びゅ: \"byu\",\n            びょ: \"byo\",\n            ぴゃ: \"pya\",\n            ぴゅ: \"pyu\",\n            ぴょ: \"pyo\",\n            // くゎ: \"\",\n            // ぐゎ: \"\",\n            ギャ: \"gya\",\n            ギュ: \"gyu\",\n            ギョ: \"gyo\",\n            ジャ: \"ja\",\n            ジュ: \"ju\",\n            ジョ: \"jo\",\n            ヂャ: \"ja\",\n            ヂュ: \"ju\",\n            ヂョ: \"jo\",\n            ビャ: \"bya\",\n            ビュ: \"byu\",\n            ビョ: \"byo\",\n            ピャ: \"pya\",\n            ピュ: \"pyu\",\n            ピョ: \"pyo\",\n            // クヮ: \"\",\n            // グヮ: \"\",\n\n            // 小書きの仮名、符号\n            ぁ: \"a\",\n            ぃ: \"i\",\n            ぅ: \"u\",\n            ぇ: \"e\",\n            ぉ: \"o\",\n            ゃ: \"ya\",\n            ゅ: \"yu\",\n            ょ: \"yo\",\n            ゎ: \"wa\",\n            ァ: \"a\",\n            ィ: \"i\",\n            ゥ: \"u\",\n            ェ: \"e\",\n            ォ: \"o\",\n            ャ: \"ya\",\n            ュ: \"yu\",\n            ョ: \"yo\",\n            ヮ: \"wa\",\n            ヵ: \"ka\",\n            ヶ: \"ke\",\n            ん: \"n\",\n            ン: \"n\",\n            // ー: \"\",\n            \"　\": \" \",\n\n            // 外来音(イェ～グォ)\n            // いぇ: \"\",\n            // うぃ: \"\",\n            // うぇ: \"\",\n            // うぉ: \"\",\n            // きぇ: \"\",\n            // くぁ: \"\",\n            // くぃ: \"\",\n            // くぇ: \"\",\n            // くぉ: \"\",\n            // ぐぁ: \"\",\n            // ぐぃ: \"\",\n            // ぐぇ: \"\",\n            // ぐぉ: \"\",\n            // イェ: \"\",\n            // ウィ: \"\",\n            // ウェ: \"\",\n            // ウォ: \"\",\n            ヴ: \"b\"\n            // ヴァ: \"\",\n            // ヴィ: \"\",\n            // ヴェ: \"\",\n            // ヴォ: \"\",\n            // ヴュ: \"\",\n            // ヴョ: \"\",\n            // キェ: \"\",\n            // クァ: \"\",\n            // クィ: \"\",\n            // クェ: \"\",\n            // クォ: \"\",\n            // グァ: \"\",\n            // グィ: \"\",\n            // グェ: \"\",\n            // グォ: \"\",\n\n            // 外来音(シェ～フョ)\n            // しぇ: \"\",\n            // じぇ: \"\",\n            // すぃ: \"\",\n            // ずぃ: \"\",\n            // ちぇ: \"\",\n            // つぁ: \"\",\n            // つぃ: \"\",\n            // つぇ: \"\",\n            // つぉ: \"\",\n            // てぃ: \"\",\n            // てゅ: \"\",\n            // でぃ: \"\",\n            // でゅ: \"\",\n            // とぅ: \"\",\n            // どぅ: \"\",\n            // にぇ: \"\",\n            // ひぇ: \"\",\n            // ふぁ: \"\",\n            // ふぃ: \"\",\n            // ふぇ: \"\",\n            // ふぉ: \"\",\n            // ふゅ: \"\",\n            // ふょ: \"\",\n            // シェ: \"\",\n            // ジェ: \"\",\n            // スィ: \"\",\n            // ズィ: \"\",\n            // チェ: \"\",\n            // ツァ: \"\",\n            // ツィ: \"\",\n            // ツェ: \"\",\n            // ツォ: \"\",\n            // ティ: \"\",\n            // テュ: \"\",\n            // ディ: \"\",\n            // デュ: \"\",\n            // トゥ: \"\",\n            // ドゥ: \"\",\n            // ニェ: \"\",\n            // ヒェ: \"\",\n            // ファ: \"\",\n            // フィ: \"\",\n            // フェ: \"\",\n            // フォ: \"\",\n            // フュ: \"\",\n            // フョ: \"\"\n        },\n        hepburn: {\n            // 数字と記号\n            \"１\": \"1\",\n            \"２\": \"2\",\n            \"３\": \"3\",\n            \"４\": \"4\",\n            \"５\": \"5\",\n            \"６\": \"6\",\n            \"７\": \"7\",\n            \"８\": \"8\",\n            \"９\": \"9\",\n            \"０\": \"0\",\n            \"！\": \"!\",\n            \"“\": \"\\\"\",\n            \"”\": \"\\\"\",\n            \"＃\": \"#\",\n            \"＄\": \"$\",\n            \"％\": \"%\",\n            \"＆\": \"&\",\n            \"’\": \"'\",\n            \"（\": \"(\",\n            \"）\": \")\",\n            \"＝\": \"=\",\n            \"～\": \"~\",\n            \"｜\": \"|\",\n            \"＠\": \"@\",\n            \"‘\": \"`\",\n            \"＋\": \"+\",\n            \"＊\": \"*\",\n            \"；\": \";\",\n            \"：\": \":\",\n            \"＜\": \"<\",\n            \"＞\": \">\",\n            \"、\": \",\",\n            \"。\": \".\",\n            \"／\": \"/\",\n            \"？\": \"?\",\n            \"＿\": \"_\",\n            \"・\": \"･\",\n            \"「\": \"\\\"\",\n            \"」\": \"\\\"\",\n            \"｛\": \"{\",\n            \"｝\": \"}\",\n            \"￥\": \"\\\\\",\n            \"＾\": \"^\",\n\n            // 直音-清音(ア～ノ)\n            あ: \"a\",\n            い: \"i\",\n            う: \"u\",\n            え: \"e\",\n            お: \"o\",\n            ア: \"a\",\n            イ: \"i\",\n            ウ: \"u\",\n            エ: \"e\",\n            オ: \"o\",\n\n            か: \"ka\",\n            き: \"ki\",\n            く: \"ku\",\n            け: \"ke\",\n            こ: \"ko\",\n            カ: \"ka\",\n            キ: \"ki\",\n            ク: \"ku\",\n            ケ: \"ke\",\n            コ: \"ko\",\n\n            さ: \"sa\",\n            し: \"shi\",\n            す: \"su\",\n            せ: \"se\",\n            そ: \"so\",\n            サ: \"sa\",\n            シ: \"shi\",\n            ス: \"su\",\n            セ: \"se\",\n            ソ: \"so\",\n\n            た: \"ta\",\n            ち: \"chi\",\n            つ: \"tsu\",\n            て: \"te\",\n            と: \"to\",\n            タ: \"ta\",\n            チ: \"chi\",\n            ツ: \"tsu\",\n            テ: \"te\",\n            ト: \"to\",\n\n            な: \"na\",\n            に: \"ni\",\n            ぬ: \"nu\",\n            ね: \"ne\",\n            の: \"no\",\n            ナ: \"na\",\n            ニ: \"ni\",\n            ヌ: \"nu\",\n            ネ: \"ne\",\n            ノ: \"no\",\n\n            // 直音-清音(ハ～ヲ)\n            は: \"ha\",\n            ひ: \"hi\",\n            ふ: \"fu\",\n            へ: \"he\",\n            ほ: \"ho\",\n            ハ: \"ha\",\n            ヒ: \"hi\",\n            フ: \"fu\",\n            ヘ: \"he\",\n            ホ: \"ho\",\n\n            ま: \"ma\",\n            み: \"mi\",\n            む: \"mu\",\n            め: \"me\",\n            も: \"mo\",\n            マ: \"ma\",\n            ミ: \"mi\",\n            ム: \"mu\",\n            メ: \"me\",\n            モ: \"mo\",\n\n            や: \"ya\",\n            ゆ: \"yu\",\n            よ: \"yo\",\n            ヤ: \"ya\",\n            ユ: \"yu\",\n            ヨ: \"yo\",\n\n            ら: \"ra\",\n            り: \"ri\",\n            る: \"ru\",\n            れ: \"re\",\n            ろ: \"ro\",\n            ラ: \"ra\",\n            リ: \"ri\",\n            ル: \"ru\",\n            レ: \"re\",\n            ロ: \"ro\",\n\n            わ: \"wa\",\n            ゐ: \"i\",\n            ゑ: \"e\",\n            を: \"o\",\n            ワ: \"wa\",\n            ヰ: \"i\",\n            ヱ: \"e\",\n            ヲ: \"o\",\n\n            // 直音-濁音(ガ～ボ)、半濁音(パ～ポ)\n            が: \"ga\",\n            ぎ: \"gi\",\n            ぐ: \"gu\",\n            げ: \"ge\",\n            ご: \"go\",\n            ガ: \"ga\",\n            ギ: \"gi\",\n            グ: \"gu\",\n            ゲ: \"ge\",\n            ゴ: \"go\",\n\n            ざ: \"za\",\n            じ: \"ji\",\n            ず: \"zu\",\n            ぜ: \"ze\",\n            ぞ: \"zo\",\n            ザ: \"za\",\n            ジ: \"ji\",\n            ズ: \"zu\",\n            ゼ: \"ze\",\n            ゾ: \"zo\",\n\n            だ: \"da\",\n            ぢ: \"ji\",\n            づ: \"zu\",\n            で: \"de\",\n            ど: \"do\",\n            ダ: \"da\",\n            ヂ: \"ji\",\n            ヅ: \"zu\",\n            デ: \"de\",\n            ド: \"do\",\n\n            ば: \"ba\",\n            び: \"bi\",\n            ぶ: \"bu\",\n            べ: \"be\",\n            ぼ: \"bo\",\n            バ: \"ba\",\n            ビ: \"bi\",\n            ブ: \"bu\",\n            ベ: \"be\",\n            ボ: \"bo\",\n\n            ぱ: \"pa\",\n            ぴ: \"pi\",\n            ぷ: \"pu\",\n            ぺ: \"pe\",\n            ぽ: \"po\",\n            パ: \"pa\",\n            ピ: \"pi\",\n            プ: \"pu\",\n            ペ: \"pe\",\n            ポ: \"po\",\n\n            // 拗音-清音(キャ～リョ)\n            きゃ: \"kya\",\n            きゅ: \"kyu\",\n            きょ: \"kyo\",\n            しゃ: \"sha\",\n            しゅ: \"shu\",\n            しょ: \"sho\",\n            ちゃ: \"cha\",\n            ちゅ: \"chu\",\n            ちょ: \"cho\",\n            にゃ: \"nya\",\n            にゅ: \"nyu\",\n            にょ: \"nyo\",\n            ひゃ: \"hya\",\n            ひゅ: \"hyu\",\n            ひょ: \"hyo\",\n            みゃ: \"mya\",\n            みゅ: \"myu\",\n            みょ: \"myo\",\n            りゃ: \"rya\",\n            りゅ: \"ryu\",\n            りょ: \"ryo\",\n            キャ: \"kya\",\n            キュ: \"kyu\",\n            キョ: \"kyo\",\n            シャ: \"sha\",\n            シュ: \"shu\",\n            ショ: \"sho\",\n            チャ: \"cha\",\n            チュ: \"chu\",\n            チョ: \"cho\",\n            ニャ: \"nya\",\n            ニュ: \"nyu\",\n            ニョ: \"nyo\",\n            ヒャ: \"hya\",\n            ヒュ: \"hyu\",\n            ヒョ: \"hyo\",\n            ミャ: \"mya\",\n            ミュ: \"myu\",\n            ミョ: \"myo\",\n            リャ: \"rya\",\n            リュ: \"ryu\",\n            リョ: \"ryo\",\n\n            // 拗音-濁音(ギャ～ビョ)、半濁音(ピャ～ピョ)、合拗音(クヮ、グヮ)\n            ぎゃ: \"gya\",\n            ぎゅ: \"gyu\",\n            ぎょ: \"gyo\",\n            じゃ: \"ja\",\n            じゅ: \"ju\",\n            じょ: \"jo\",\n            ぢゃ: \"ja\",\n            ぢゅ: \"ju\",\n            ぢょ: \"jo\",\n            びゃ: \"bya\",\n            びゅ: \"byu\",\n            びょ: \"byo\",\n            ぴゃ: \"pya\",\n            ぴゅ: \"pyu\",\n            ぴょ: \"pyo\",\n            // くゎ: \"\",\n            // ぐゎ: \"\",\n            ギャ: \"gya\",\n            ギュ: \"gyu\",\n            ギョ: \"gyo\",\n            ジャ: \"ja\",\n            ジュ: \"ju\",\n            ジョ: \"jo\",\n            ヂャ: \"ja\",\n            ヂュ: \"ju\",\n            ヂョ: \"jo\",\n            ビャ: \"bya\",\n            ビュ: \"byu\",\n            ビョ: \"byo\",\n            ピャ: \"pya\",\n            ピュ: \"pyu\",\n            ピョ: \"pyo\",\n            // クヮ: \"\",\n            // グヮ: \"\",\n\n            // 小書きの仮名、符号\n            ぁ: \"a\",\n            ぃ: \"i\",\n            ぅ: \"u\",\n            ぇ: \"e\",\n            ぉ: \"o\",\n            ゃ: \"ya\",\n            ゅ: \"yu\",\n            ょ: \"yo\",\n            ゎ: \"wa\",\n            ァ: \"a\",\n            ィ: \"i\",\n            ゥ: \"u\",\n            ェ: \"e\",\n            ォ: \"o\",\n            ャ: \"ya\",\n            ュ: \"yu\",\n            ョ: \"yo\",\n            ヮ: \"wa\",\n            ヵ: \"ka\",\n            ヶ: \"ke\",\n            ん: \"n\",\n            ン: \"n\",\n            // ー: \"\",\n            \"　\": \" \",\n\n            // 外来音(イェ～グォ)\n            いぇ: \"ye\",\n            うぃ: \"wi\",\n            うぇ: \"we\",\n            うぉ: \"wo\",\n            きぇ: \"kye\",\n            くぁ: \"kwa\",\n            くぃ: \"kwi\",\n            くぇ: \"kwe\",\n            くぉ: \"kwo\",\n            ぐぁ: \"gwa\",\n            ぐぃ: \"gwi\",\n            ぐぇ: \"gwe\",\n            ぐぉ: \"gwo\",\n            イェ: \"ye\",\n            ウィ: \"wi\",\n            ウェ: \"we\",\n            ウォ: \"wo\",\n            ヴ: \"vu\",\n            ヴァ: \"va\",\n            ヴィ: \"vi\",\n            ヴェ: \"ve\",\n            ヴォ: \"vo\",\n            ヴュ: \"vyu\",\n            ヴョ: \"vyo\",\n            キェ: \"kya\",\n            クァ: \"kwa\",\n            クィ: \"kwi\",\n            クェ: \"kwe\",\n            クォ: \"kwo\",\n            グァ: \"gwa\",\n            グィ: \"gwi\",\n            グェ: \"gwe\",\n            グォ: \"gwo\",\n\n            // 外来音(シェ～フョ)\n            しぇ: \"she\",\n            じぇ: \"je\",\n            // すぃ: \"\",\n            // ずぃ: \"\",\n            ちぇ: \"che\",\n            つぁ: \"tsa\",\n            つぃ: \"tsi\",\n            つぇ: \"tse\",\n            つぉ: \"tso\",\n            てぃ: \"ti\",\n            てゅ: \"tyu\",\n            でぃ: \"di\",\n            でゅ: \"dyu\",\n            とぅ: \"tu\",\n            どぅ: \"du\",\n            にぇ: \"nye\",\n            ひぇ: \"hye\",\n            ふぁ: \"fa\",\n            ふぃ: \"fi\",\n            ふぇ: \"fe\",\n            ふぉ: \"fo\",\n            ふゅ: \"fyu\",\n            ふょ: \"fyo\",\n            シェ: \"she\",\n            ジェ: \"je\",\n            // スィ: \"\",\n            // ズィ: \"\",\n            チェ: \"che\",\n            ツァ: \"tsa\",\n            ツィ: \"tsi\",\n            ツェ: \"tse\",\n            ツォ: \"tso\",\n            ティ: \"ti\",\n            テュ: \"tyu\",\n            ディ: \"di\",\n            デュ: \"dyu\",\n            トゥ: \"tu\",\n            ドゥ: \"du\",\n            ニェ: \"nye\",\n            ヒェ: \"hye\",\n            ファ: \"fa\",\n            フィ: \"fi\",\n            フェ: \"fe\",\n            フォ: \"fo\",\n            フュ: \"fyu\",\n            フョ: \"fyo\"\n        }\n    };\n\n    const reg_tsu = /(っ|ッ)([bcdfghijklmnopqrstuvwyz])/gm;\n    const reg_xtsu = /っ|ッ/gm;\n\n    let pnt = 0;\n    let ch;\n    let r;\n    let result = \"\";\n\n    // [PASSPORT] 長音省略 「―」の場合\n    if (system === ROMANIZATION_SYSTEM.PASSPORT) {\n        str = str.replace(/ー/gm, \"\");\n    }\n\n    // [NIPPON|HEPBURN] 撥音の特殊表記 a、i、u、e、o、y\n    if (system === ROMANIZATION_SYSTEM.NIPPON || system === ROMANIZATION_SYSTEM.HEPBURN) {\n        const reg_hatu = new RegExp(/(ん|ン)(?=あ|い|う|え|お|ア|イ|ウ|エ|オ|ぁ|ぃ|ぅ|ぇ|ぉ|ァ|ィ|ゥ|ェ|ォ|や|ゆ|よ|ヤ|ユ|ヨ|ゃ|ゅ|ょ|ャ|ュ|ョ)/g);\n        let match;\n        const indices = [];\n        while ((match = reg_hatu.exec(str)) !== null) {\n            indices.push(match.index + 1);\n        }\n        if (indices.length !== 0) {\n            let mStr = \"\";\n            for (let i = 0; i < indices.length; i++) {\n                if (i === 0) {\n                    mStr += `${str.slice(0, indices[i])}'`;\n                }\n                else {\n                    mStr += `${str.slice(indices[i - 1], indices[i])}'`;\n                }\n            }\n            mStr += str.slice(indices[indices.length - 1]);\n            str = mStr;\n        }\n    }\n\n    // [ALL] kana to roman chars\n    const max = str.length;\n    while (pnt <= max) {\n        if (r = romajiSystem[system][str.substring(pnt, pnt + 2)]) {\n            result += r;\n            pnt += 2;\n        }\n        else {\n            result += (r = romajiSystem[system][ch = str.substring(pnt, pnt + 1)]) ? r : ch;\n            pnt += 1;\n        }\n    }\n    result = result.replace(reg_tsu, \"$2$2\");\n\n    // [PASSPORT|HEPBURN] 子音を重ねて特殊表記\n    if (system === ROMANIZATION_SYSTEM.PASSPORT || system === ROMANIZATION_SYSTEM.HEPBURN) {\n        result = result.replace(/cc/gm, \"tc\");\n    }\n\n    result = result.replace(reg_xtsu, \"tsu\");\n\n    // [PASSPORT|HEPBURN] 撥音の特殊表記 b、m、p\n    if (system === ROMANIZATION_SYSTEM.PASSPORT || system === ROMANIZATION_SYSTEM.HEPBURN) {\n        result = result.replace(/nm/gm, \"mm\");\n        result = result.replace(/nb/gm, \"mb\");\n        result = result.replace(/np/gm, \"mp\");\n    }\n\n    // [NIPPON] 長音変換\n    if (system === ROMANIZATION_SYSTEM.NIPPON) {\n        result = result.replace(/aー/gm, \"â\");\n        result = result.replace(/iー/gm, \"î\");\n        result = result.replace(/uー/gm, \"û\");\n        result = result.replace(/eー/gm, \"ê\");\n        result = result.replace(/oー/gm, \"ô\");\n    }\n\n    // [HEPBURN] 長音変換\n    if (system === ROMANIZATION_SYSTEM.HEPBURN) {\n        result = result.replace(/aー/gm, \"ā\");\n        result = result.replace(/iー/gm, \"ī\");\n        result = result.replace(/uー/gm, \"ū\");\n        result = result.replace(/eー/gm, \"ē\");\n        result = result.replace(/oー/gm, \"ō\");\n    }\n\n    return result;\n};\n\n/**\n * Get the type of given string\n *\n * @param {string} str Given string\n * @return {number} Type number. 0 for pure kanji, 1 for kanji-kana-mixed, 2 for pure kana, 3 for others\n */\nconst getStrType = function (str) {\n    let hasKJ = false;\n    let hasHK = false;\n    for (let i = 0; i < str.length; i++) {\n        if (isKanji(str[i])) {\n            hasKJ = true;\n        }\n        else if (isHiragana(str[i]) || isKatakana(str[i])) {\n            hasHK = true;\n        }\n    }\n    if (hasKJ && hasHK) return 1;\n    if (hasKJ) return 0;\n    if (hasHK) return 2;\n    return 3;\n};\n\n/**\n * Patch tokens for conversion\n * @param {Object} tokens Given tokens\n * @return {Object} Patched tokens\n */\nconst patchTokens = function (tokens) {\n    // patch for token structure\n    for (let cr = 0; cr < tokens.length; cr++) {\n        if (hasJapanese(tokens[cr].surface_form)) {\n            if (!tokens[cr].reading) {\n                if (tokens[cr].surface_form.split(\"\").every(isKana)) {\n                    tokens[cr].reading = toRawKatakana(tokens[cr].surface_form);\n                }\n                else {\n                    tokens[cr].reading = tokens[cr].surface_form;\n                }\n            }\n            else if (hasHiragana(tokens[cr].reading)) {\n                tokens[cr].reading = toRawKatakana(tokens[cr].reading);\n            }\n        }\n        else {\n            tokens[cr].reading = tokens[cr].surface_form;\n        }\n    }\n\n    // patch for 助動詞\"う\" after 動詞\n    for (let i = 0; i < tokens.length; i++) {\n        if (tokens[i].pos && tokens[i].pos === \"助動詞\" && (tokens[i].surface_form === \"う\" || tokens[i].surface_form === \"ウ\")) {\n            if (i - 1 >= 0 && tokens[i - 1].pos && tokens[i - 1].pos === \"動詞\") {\n                tokens[i - 1].surface_form += \"う\";\n                if (tokens[i - 1].pronunciation) {\n                    tokens[i - 1].pronunciation += \"ー\";\n                }\n                else {\n                    tokens[i - 1].pronunciation = `${tokens[i - 1].reading}ー`;\n                }\n                tokens[i - 1].reading += \"ウ\";\n                tokens.splice(i, 1);\n                i--;\n            }\n        }\n    }\n\n    // patch for \"っ\" at the tail of 動詞、形容詞\n    for (let j = 0; j < tokens.length; j++) {\n        if (tokens[j].pos && (tokens[j].pos === \"動詞\" || tokens[j].pos === \"形容詞\") && tokens[j].surface_form.length > 1 && (tokens[j].surface_form[tokens[j].surface_form.length - 1] === \"っ\" || tokens[j].surface_form[tokens[j].surface_form.length - 1] === \"ッ\")) {\n            if (j + 1 < tokens.length) {\n                tokens[j].surface_form += tokens[j + 1].surface_form;\n                if (tokens[j].pronunciation) {\n                    tokens[j].pronunciation += tokens[j + 1].pronunciation;\n                }\n                else {\n                    tokens[j].pronunciation = `${tokens[j].reading}${tokens[j + 1].reading}`;\n                }\n                tokens[j].reading += tokens[j + 1].reading;\n                tokens.splice(j + 1, 1);\n                j--;\n            }\n        }\n    }\n\n    return tokens;\n};\n\n/**\n * Convert kana to hiragana\n *\n * @param {string} str Given string\n * @return {string} Hiragana string\n */\nconst kanaToHiragna = function (str) {\n    return toRawHiragana(str);\n};\n\n/**\n * Convert kana to katakana\n *\n * @param {string} str Given string\n * @return {string} Katakana string\n */\nconst kanaToKatakana = function (str) {\n    return toRawKatakana(str);\n};\n\n/**\n * Convert kana to romaji\n *\n * @param {string} str Given string\n * @param {string} system To which romanization system the given string is converted. [\"nippon\"|\"passport\"|\"hepburn\"]\n * @return {string} Romaji string\n */\nconst kanaToRomaji = function (str, system) {\n    return toRawRomaji(str, system);\n};\n\nexport {\n    // language\n    ROMANIZATION_SYSTEM,\n    getStrType,\n    patchTokens,\n    isHiragana,\n    isKatakana,\n    isKana,\n    isKanji,\n    isJapanese,\n    hasHiragana,\n    hasKatakana,\n    hasKana,\n    hasKanji,\n    hasJapanese,\n    toRawHiragana,\n    toRawKatakana,\n    toRawRomaji,\n    kanaToHiragna,\n    kanaToKatakana,\n    kanaToRomaji\n};\n"],"names":["isNode","window","module","exports","TokenizerBuilder","require","DictionaryBuilder","kuromoji","builder","option","dictionaryBuilder","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","hmd","Object","create","children","defineProperty","enumerable","set","Error","charCodeAt"],"sourceRoot":""}